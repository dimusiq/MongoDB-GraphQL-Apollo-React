{"ast":null,"code":"import { ApolloClient, createHttpLink, InMemoryCache } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:5000'\n});\nconst authLink = setContext((_, _ref) => {\n  let {\n    headers\n  } = _ref;\n  return {\n    headers: { ...headers,\n      authorization: localStorage.getItem('token') || ''\n    }\n  };\n});\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\nexport default client;","map":{"version":3,"sources":["D:/web/git/MongoDB-GraphQL-Apollo-React/client/src/apolloClient.js"],"names":["ApolloClient","createHttpLink","InMemoryCache","setContext","httpLink","uri","authLink","_","headers","authorization","localStorage","getItem","client","link","concat","cache"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,cAAvB,EAAuCC,aAAvC,QAA4D,gBAA5D;AACA,SAASC,UAAT,QAA2B,6BAA3B;AAEA,MAAMC,QAAQ,GAAGH,cAAc,CAAC;AAC/BI,EAAAA,GAAG,EAAE;AAD0B,CAAD,CAA/B;AAIA,MAAMC,QAAQ,GAAGH,UAAU,CAAC,CAACI,CAAD,WAAoB;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AAC/C,SAAO;AACNA,IAAAA,OAAO,EAAE,EACR,GAAGA,OADK;AAERC,MAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC;AAFxC;AADH,GAAP;AAMA,CAP0B,CAA3B;AASA,MAAMC,MAAM,GAAG,IAAIZ,YAAJ,CAAiB;AAC/Ba,EAAAA,IAAI,EAAEP,QAAQ,CAACQ,MAAT,CAAgBV,QAAhB,CADyB;AAE/BW,EAAAA,KAAK,EAAE,IAAIb,aAAJ;AAFwB,CAAjB,CAAf;AAKA,eAAeU,MAAf","sourcesContent":["import { ApolloClient, createHttpLink, InMemoryCache } from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\n\r\nconst httpLink = createHttpLink({\r\n\turi: 'http://localhost:5000',\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n\treturn {\r\n\t\theaders: {\r\n\t\t\t...headers,\r\n\t\t\tauthorization: localStorage.getItem('token') || '',\r\n\t\t},\r\n\t};\r\n});\r\n\r\nconst client = new ApolloClient({\r\n\tlink: authLink.concat(httpLink),\r\n\tcache: new InMemoryCache(),\r\n});\r\n\r\nexport default client;\r\n"]},"metadata":{},"sourceType":"module"}